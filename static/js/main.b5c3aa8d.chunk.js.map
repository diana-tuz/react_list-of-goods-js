{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","SORT_BY_INDEX_DESC","ASC","DESC","App","useState","sortField","setSortField","sortDirection","setSortDirection","sortGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","indexOf","getSortGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SACjBC,EAAqB,kBACrBC,EAAM,MACNC,EAAO,OAiCN,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0CF,mBAASH,GAAnD,mBAAOM,EAAP,KAAsBC,EAAtB,KACMC,EAlCR,SAAsBC,EAAOL,EAAWE,GACtC,IAAMI,EAAa,YAAOD,GA2B1B,OAzBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKP,EACH,OAAOS,IAAkBN,EACrBY,EAAME,cAAcD,GACpBA,EAAMC,cAAcF,GAE1B,KAAKd,EAEH,OAAOQ,IAAkBN,EACrBY,EAAMG,OAASF,EAAME,OACpBH,EAAMG,SAAWF,EAAME,OACtBF,EAAMC,cAAcF,GACpBC,EAAME,OAASH,EAAMG,OAE7B,KAAKhB,EACH,OAAOW,EAAcM,QAAQH,GAASH,EAAcM,QAAQJ,GAE9D,QACE,OAAO,MAKRF,EAMWO,CAAarB,EAAiBQ,EAAWE,GAE3D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPd,EAAaR,IAEfuB,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYjB,IAAcP,IAN9B,iCAYA,wBACEsB,QAAS,WACPd,EAAaP,IAEfsB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYjB,IAAcN,IAN9B,4BAYA,wBACEqB,QAAS,WACW,KAAdf,GACFC,EAAaN,GAGXO,IAAkBL,GAAQG,IAAcL,GAC1CM,EAAa,IAGXC,IAAkBL,GACpBM,EAAiBP,GAGfM,IAAkBN,GACpBO,EAAiBN,IAGrBmB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYf,IAAkBN,IApBlC,qBA0BCI,GACC,wBACEe,QAAS,WACPd,EAAa,IACbE,EAAiBP,IAEnBoB,KAAK,SACLF,UAAU,4BANZ,sBAYJ,6BACGV,EAAUc,KAAI,SAAAC,GAAI,OACjB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC9HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b5c3aa8d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\nconst SORT_BY_INDEX_DESC = 'reverse default';\nconst ASC = 'asc';\nconst DESC = 'desc';\n\nfunction getSortGoods(goods, sortField, sortDirection) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_ALPHABET:\n          return sortDirection === ASC\n            ? good1.localeCompare(good2)\n            : good2.localeCompare(good1);\n\n        case SORT_BY_LENGTH:\n          // eslint-disable-next-line no-nested-ternary\n          return sortDirection === ASC\n            ? good1.length - good2.length\n            : (good1.length === good2.length)\n              ? good2.localeCompare(good1)\n              : good2.length - good1.length;\n\n        case SORT_BY_INDEX_DESC:\n          return preparedGoods.indexOf(good2) - preparedGoods.indexOf(good1);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [sortDirection, setSortDirection] = useState(ASC);\n  const sortGoods = getSortGoods(goodsFromServer, sortField, sortDirection);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortField(SORT_BY_ALPHABET);\n          }}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_BY_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortField(SORT_BY_LENGTH);\n          }}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            if (sortField === '') {\n              setSortField(SORT_BY_INDEX_DESC);\n            }\n\n            if (sortDirection === DESC && sortField === SORT_BY_INDEX_DESC) {\n              setSortField('');\n            }\n\n            if (sortDirection === DESC) {\n              setSortDirection(ASC);\n            }\n\n            if (sortDirection === ASC) {\n              setSortDirection(DESC);\n            }\n          }}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': sortDirection === ASC,\n          })}\n        >\n          Reverse\n        </button>\n\n        {sortField && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setSortDirection(ASC);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {sortGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}