{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","SORT_BY_INDEX_DESC","App","useState","sortField","setSortField","sortDirection","setSortDirection","sortGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","indexOf","getSortGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPA8IaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SACjBC,EAAqB,kBA8BpB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0CF,mBAAS,OAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACMC,EA/BR,SAAsBC,EAAOL,EAAWE,GACtC,IAAMI,EAAa,YAAOD,GAwB1B,OAtBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EACH,MAAyB,QAAlBO,EACHM,EAAME,cAAcD,GACpBA,EAAMC,cAAcF,GAE1B,KAAKZ,EACH,MAAyB,QAAlBM,EACHM,EAAMG,OAASF,EAAME,OACrBF,EAAME,OAASH,EAAMG,OAE3B,KAAKd,EACH,OAAOS,EAAcM,QAAQH,GAASH,EAAcM,QAAQJ,GAE9D,QACE,OAAO,MAKRF,EAMWO,CAAanB,EAAiBM,EAAWE,GAE3D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPd,EAAaN,GACbQ,EAAiB,QAEnBa,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYjB,IAAcL,IAP9B,iCAaA,wBACEoB,QAAS,WACPd,EAAaL,GACbO,EAAiB,QAEnBa,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYjB,IAAcJ,IAP9B,4BAaA,wBACEmB,QAAS,WAOLZ,EALCH,IAAcL,GAAoBK,IAAcJ,GACpC,QAAlBM,EAIsB,MAFA,SAKrBc,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYjB,IAAcH,GACH,QAAlBK,IAdT,qBAoBCF,GACC,wBACEe,QAAS,WACPd,EAAa,IACbE,EAAiB,QAEnBa,KAAK,SACLF,UAAU,4BANZ,sBAYJ,6BACGV,EAAUc,KAAI,SAAAC,GAAI,OACjB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC7PnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.858de830.chunk.js","sourcesContent":["// import { useState } from 'react';\n// import cn from 'classnames';\n\n// import 'bulma/css/bulma.css';\n// import './App.scss';\n\n// export const goodsFromServer = [\n//   'Dumplings',\n//   'Carrot',\n//   'Eggs',\n//   'Ice cream',\n//   'Apple',\n//   'Bread',\n//   'Fish',\n//   'Honey',\n//   'Jam',\n//   'Garlic',\n// ];\n\n// const SORT_BY_ALFABET = 'alfabet';\n// const SORT_BY_ALFABET_REV = 'alfabet for revers';\n// const SORT_BY_LENGTH = 'length';\n// const SORT_BY_REVERSE_LENGTH = 'reverse length';\n// const SORT_BY_REVERSE_ALFABET = 'reverse alfabet';\n// const SORT_BY_INDEX_DESC = 'reverse default';\n\n// function getSortGoods(goods, sortField) {\n//   const preparedGoods = [...goods];\n\n//   if (sortField) {\n//     preparedGoods.sort((good1, good2) => {\n//       switch (sortField) {\n//         case SORT_BY_ALFABET:\n//           return good1.localeCompare(good2);\n\n//         case SORT_BY_LENGTH:\n//           return good1.length - good2.length;\n\n//         case SORT_BY_REVERSE_ALFABET:\n//           return good2.localeCompare(good1);\n\n//         case SORT_BY_ALFABET_REV:\n//           return good1.localeCompare(good2);\n\n//         case SORT_BY_REVERSE_LENGTH:\n//           return good2.length - good1.length;\n\n//         case SORT_BY_INDEX_DESC:\n//           return preparedGoods.indexOf(good2) - preparedGoods.indexOf(good1);\n\n//         default:\n//           return 0;\n//       }\n//     });\n//   }\n\n//   return preparedGoods;\n// }\n\n// export const App = () => {\n//   const [sortField, setSortField] = useState('');\n//   const sortGoods = getSortGoods(goodsFromServer, sortField);\n\n//   return (\n//     <div className=\"section content\">\n//       <div className=\"buttons\">\n//         <button\n//           onClick={() => setSortField(SORT_BY_ALFABET)}\n//           type=\"button\"\n//           className={cn('button is-info', {\n//             'is-light': sortField !== SORT_BY_ALFABET,\n//           })}\n//         >\n//           Sort alphabetically\n//         </button>\n\n//         <button\n//           onClick={() => setSortField(SORT_BY_LENGTH)}\n//           type=\"button\"\n//           className={cn('button is-success', {\n//             'is-light': sortField !== SORT_BY_LENGTH,\n//           })}\n//         >\n//           Sort by length\n//         </button>\n\n//         <button\n//           onClick={() => {\n//             if (sortField === SORT_BY_ALFABET) {\n//               setSortField(SORT_BY_REVERSE_ALFABET);\n//             }\n\n//             if (sortField === SORT_BY_LENGTH) {\n//               setSortField(SORT_BY_REVERSE_LENGTH);\n//             }\n\n//             if (sortField === '') {\n//               setSortField(SORT_BY_INDEX_DESC);\n//             }\n\n//             if (sortField === SORT_BY_REVERSE_ALFABET) {\n//               setSortField(SORT_BY_ALFABET_REV);\n//             }\n//           }}\n//           type=\"button\"\n//           className={cn('button is-warning', {\n//             'is-light': sortField !== SORT_BY_REVERSE_ALFABET\n//               && sortField !== SORT_BY_REVERSE_LENGTH\n//               && sortField !== SORT_BY_INDEX_DESC,\n//           })}\n//         >\n//           Reverse\n//         </button>\n\n//         {sortField && (\n//           <button\n//             onClick={() => {\n//               setSortField('');\n//             }}\n//             type=\"button\"\n//             className=\"button is-danger is-light\"\n//           >\n//             Reset\n//           </button>\n//         )}\n//       </div>\n//       <ul>\n//         {sortGoods.map(good => (\n//           <li key={good} data-cy=\"Good\">\n//             {good}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\nconst SORT_BY_INDEX_DESC = 'reverse default';\n\nfunction getSortGoods(goods, sortField, sortDirection) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_ALPHABET:\n          return sortDirection === 'asc'\n            ? good1.localeCompare(good2)\n            : good2.localeCompare(good1);\n\n        case SORT_BY_LENGTH:\n          return sortDirection === 'asc'\n            ? good1.length - good2.length\n            : good2.length - good1.length;\n\n        case SORT_BY_INDEX_DESC:\n          return preparedGoods.indexOf(good2) - preparedGoods.indexOf(good1);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const sortGoods = getSortGoods(goodsFromServer, sortField, sortDirection);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortField(SORT_BY_ALPHABET);\n            setSortDirection('asc');\n          }}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_BY_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortField(SORT_BY_LENGTH);\n            setSortDirection('asc');\n          }}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            if (\n              (sortField === SORT_BY_ALPHABET || sortField === SORT_BY_LENGTH)\n      && sortDirection === 'asc'\n            ) {\n              setSortDirection('desc');\n            } else {\n              setSortDirection('asc');\n            }\n          }}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': sortField !== SORT_BY_INDEX_DESC\n              && sortDirection === 'asc',\n          })}\n        >\n          Reverse\n        </button>\n\n        {sortField && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setSortDirection('asc');\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {sortGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}